definitions:
  dto.TokenPair:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh_token:
        example: c29tZS1iYXNlNjQtcmVmcmVzaC10b2tlbg==
        type: string
    type: object
  dto.UserId:
    properties:
      user_id:
        example: "12345"
        type: string
    type: object
  handlers.HTTPError:
    properties:
      code:
        example: EXAMPLE_ERROR_CODE
        type: string
      message:
        example: example error message
        type: string
    type: object
info:
  contact: {}
  title: Authentication-Service API
  version: "1.0"
paths:
  /login:
    post:
      description: |-
        Returns a new pair of access and refresh tokens for the user with the specified GUID.
        The user ID (GUID) must be passed in the request query params.
        Tokens are tied to User-Agent and IP address.
      parameters:
      - example: "12345"
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenPair'
        "401":
          description: 'possible error codes: INVALID_QUERY_PARAMS'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: 'possible error codes: INTERNAL_SERVER_ERROR'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      summary: Get token pair
      tags:
      - auth
  /logout:
    post:
      description: |-
        Invalidate the current token pair (access + refresh), logging the user out.
        After this, the user must re-authenticate to access protected routes.
      parameters:
      - description: tokens to invalidate
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/dto.TokenPair'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'possible error codes: INVALID_JSON_BODY, TOKENS_NOT_PAIR'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "401":
          description: 'possible error codes: TOKEN_EXPIRED, TOKEN_INVALID, TOKEN_BLACKLISTED'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "404":
          description: 'possible error codes: TOKEN_NOT_FOUND'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "409":
          description: 'possible error codes: TOKEN_ALREADY_USED'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: 'possible error codes: INTERNAL_SERVER_ERROR'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      summary: Logout user
      tags:
      - auth
  /tokens/refresh:
    put:
      description: |-
        Refresh the user's token pair (access + refresh) using valid refresh token.
        Refresh is allowed only if User-Agent match the original ones.
        If refresh fails, tokens are invalidated and user is logged out.
        If the IP changes, a webhook notification is triggered.
      parameters:
      - description: tokens to update
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/dto.TokenPair'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenPair'
        "400":
          description: 'possible error codes: INVALID_JSON_BODY, TOKENS_NOT_PAIR'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "401":
          description: 'possible error codes: TOKEN_INVALID, DIFFERENT_USER_AGENT'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "404":
          description: 'possible error codes: TOKEN_NOT_FOUND'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "409":
          description: 'possible error codes: TOKEN_ALREADY_USED'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: 'possible error codes: INTERNAL_SERVER_ERROR'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      summary: Update token pair
      tags:
      - auth
  /users/guid:
    get:
      description: |-
        Return the GUID of the currently authenticated user.
        Requires a valid access token provided in the Authorization header.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserId'
        "401":
          description: 'possible error codes: TOKEN_INVALID, TOKEN_EXPIRED, TOKEN_BLACKLISTED'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
        "500":
          description: 'possible error codes: INTERNAL_SERVER_ERROR'
          schema:
            $ref: '#/definitions/handlers.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get user id
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
